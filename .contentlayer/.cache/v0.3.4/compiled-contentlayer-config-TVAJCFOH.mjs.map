{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {defineDocumentType, makeSource} from '@contentlayer/source-files'\r\nimport readingTime from 'reading-time';\r\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\r\nimport rehypePrettyCode from 'rehype-pretty-code';\r\nimport rehypeSlug from 'rehype-slug';\r\nimport remarkGfm from 'remark-gfm';\r\nimport GithubSlugger from 'github-slugger'\r\n\r\nconst Blog = defineDocumentType(() => ({\r\n    name: 'Blog',\r\n    filePathPattern: '**/**/*.mdx',\r\n    contentType: \"mdx\",\r\n    fields: {\r\n        title: {\r\n            type: 'string',\r\n        },\r\n        publishedAt: {\r\n            type: 'date',\r\n            required: true,\r\n        },\r\n        updatedAt: {\r\n            type: 'date',\r\n            required: true,\r\n        },\r\n        description: {\r\n            type: 'string',\r\n            required: true\r\n        },\r\n        image: {\r\n            type: 'image',\r\n        },\r\n        imageAttribute: {\r\n            type: 'string'\r\n        },\r\n        isPublished: {\r\n            type: 'boolean',\r\n            default: true,\r\n        },\r\n        author: {\r\n            type: 'string',\r\n            required: true\r\n        },\r\n        tags: {\r\n            type: 'list',\r\n            of: {type: 'string'},\r\n        }\r\n    },\r\n\r\n    computedFields: {\r\n        url: {\r\n            type: 'string',\r\n            resolve: (doc) => `/blogs/${doc._raw.flattenedPath}`,\r\n        },\r\n        readingTime: {\r\n            type: \"json\",\r\n            resolve: (doc) => readingTime(doc.body.raw)\r\n        },\r\n        toc: {\r\n            type: \"json\",\r\n            resolve: async (doc) => {\r\n\r\n                const regularExp = /\\n(?<flag>#{1,6})\\s+(?<content>.+)/g;\r\n                const slugger = new GithubSlugger();\r\n                const headings = Array.from(doc.body.raw.matchAll(regularExp)).map(({groups}) => {\r\n                    const flag = groups?.flag;\r\n                    const content = groups?.content;\r\n\r\n                    return {\r\n                        level: flag?.length == 1 ? \"one\" : flag?.length == 2 ? \"two\" : \"three\",\r\n                        text: content,\r\n                        slug: content ? slugger.slug(content) : undefined\r\n                    }\r\n                })\r\n                return headings;\r\n            }\r\n        }\r\n    }\r\n}));\r\n\r\nconst codeOptions = {\r\n    theme: 'github-dark'\r\n}\r\n\r\nexport default makeSource({\r\n    contentDirPath: 'contents',\r\n    documentTypes: [Blog],\r\n    mdx: { remarkPlugins: [remarkGfm], \r\n        rehypePlugins: [rehypeSlug, [rehypeAutolinkHeadings, {behavior: \"append\"}], \r\n    [rehypePrettyCode, codeOptions]]}\r\n})"],
  "mappings": ";AAAA,SAAQ,oBAAoB,kBAAiB;AAC7C,OAAO,iBAAiB;AACxB,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,eAAe;AACtB,OAAO,mBAAmB;AAE1B,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACnC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,IACV;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,IACV;AAAA,IACA,gBAAgB;AAAA,MACZ,MAAM;AAAA,IACV;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,IAAI,EAAC,MAAM,SAAQ;AAAA,IACvB;AAAA,EACJ;AAAA,EAEA,gBAAgB;AAAA,IACZ,KAAK;AAAA,MACD,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,UAAU,IAAI,KAAK,aAAa;AAAA,IACtD;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG;AAAA,IAC9C;AAAA,IACA,KAAK;AAAA,MACD,MAAM;AAAA,MACN,SAAS,OAAO,QAAQ;AAEpB,cAAM,aAAa;AACnB,cAAM,UAAU,IAAI,cAAc;AAClC,cAAM,WAAW,MAAM,KAAK,IAAI,KAAK,IAAI,SAAS,UAAU,CAAC,EAAE,IAAI,CAAC,EAAC,OAAM,MAAM;AAC7E,gBAAM,OAAO,QAAQ;AACrB,gBAAM,UAAU,QAAQ;AAExB,iBAAO;AAAA,YACH,OAAO,MAAM,UAAU,IAAI,QAAQ,MAAM,UAAU,IAAI,QAAQ;AAAA,YAC/D,MAAM;AAAA,YACN,MAAM,UAAU,QAAQ,KAAK,OAAO,IAAI;AAAA,UAC5C;AAAA,QACJ,CAAC;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AACJ,EAAE;AAEF,IAAM,cAAc;AAAA,EAChB,OAAO;AACX;AAEA,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IAAE,eAAe,CAAC,SAAS;AAAA,IAC5B,eAAe;AAAA,MAAC;AAAA,MAAY,CAAC,wBAAwB,EAAC,UAAU,SAAQ,CAAC;AAAA,MAC7E,CAAC,kBAAkB,WAAW;AAAA,IAAC;AAAA,EAAC;AACpC,CAAC;",
  "names": []
}
